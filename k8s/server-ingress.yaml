# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ejemplo-ingress
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-staging
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/enable-websocket: "true"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - ejemplo.35.243.227.43.nip.io
#     secretName: ejemplo-tls5
#   rules:
#   - host: ejemplo.34.8.6.142.nip.io
#     http:
#       paths:
#       - path: /ws
#         pathType: Prefix
#         backend:
#           service:
#             name: server-app
#             port:
#               number: 80


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ws-ingress
#   namespace: default
#   annotations:
#     kubernetes.io/ingress.class: "gce"
#     networking.gke.io/managed-certificates: ws-cert
#     # si usás NGINX Ingress Controller: 
#     # nginx.ingress.kubernetes.io/enable-websocket: "true"
# spec:
#   rules:
#     - host: ws.unlucoin.info
#       http:
#         paths:
#           - path: /ws
#             pathType: Prefix
#             backend:
#               service:
#                 name: server-app
#                 port:
#                   number: 80

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: managed-cert-ingress
#   annotations:
#     #kubernetes.io/ingress.global-static-ip-name: ip-ingress
#     networking.gke.io/managed-certificates: ws-cert
# spec:
#   ingressClassName: nginx
#   defaultBackend:
#     service:
#       name: server-app
#       port:
#         number: 80

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: managed-cert-ingress
#   namespace: default
#   annotations:
#     kubernetes.io/ingress.global-static-ip-name: ip-ingress  # Aquí debe ir el nombre de la IP estática
#     networking.gke.io/managed-certificates: ws-cert
#     #kubernetes.io/ingress.class: "gce-internal"
#     kubernetes.io/ingress.allow-http: "false"
# spec:
#   ingressClassName: gce
#   rules:
#     - host: ws.unlucoin.info
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: server-app
#                 port:
#                   number: 80


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: managed-cert-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "server-app"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - ws.unlucoin.info
      secretName: ws-cert-tls1
    - hosts:
        - cd.unlucoin.info
      secretName: ws-cert-tls2
    - hosts:
        - pm.unlucoin.info
      secretName: ws-cert-tls3
  rules:
    - host: ws.unlucoin.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: server-app
                port:
                  number: 80
    - host: cd.unlucoin.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-coordinador
                port:
                  number: 8080
    - host: pm.unlucoin.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-poolmanager
                port:
                  number: 8080

